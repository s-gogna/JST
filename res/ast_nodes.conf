[
  {
    "comment": "This type of node handles all loops: for, while, and do...while.",
    "name": "IterationNode",
    "attributes": ["is_pre_test_loop"],
    "single_children": ["initialization_expression", "stop_condition_expression", "increment_expression"],
    "list_children": ["body_statments"],
    "python_3ac_gen_code": "",
    "3ac_parameters": ["a_dummy_parameter"]
  },











  {
    "comment": "",
    "name": "InitializerList",
    "list_children": ["initializers"]
  },

  {
    "comment": "",
    "name": "Label",
    "attributes": ["label_name"],
    "single_children": ["body_statement"]
  },

  {
    "comment": "",
    "name": "ParameterList",
    "list_children": ["parameters"],
  },

  {
    "comment": "",
    "name": "PointerDeclaration",
    "attributes": ["qualifiers"],
    "single_children": ["type"]
  },

  {
    "comment": "",
    "name": "Return",
    "single_children": ["expression"]
  },

  {
    "comment": "REVISIT ME - IS THIS THE FULL SWITCH OR JUST FOR EACH LABEL/CASE?",
    "name": "Switch",
    "attributes": [],
    "single_children": ["conditional", "body_statement"],
    "list_children": [],
    "3ac_parameters": []
  },

  {
    "comment": "",
    "name": "TernaryOperator",
    "single_children": ["conditional", "if_true_expression", "if_false_expression"]
  },

  {
    "comment": "WHAT ARE SOME OF THESE THINGS?",
    "name": "TypeDeclaration",
    "attributes": ["declaration_name", "qualifiers"],
    "single_children": ["type"]
  },

  {
    "comment": "",
    "name": "Unary Operator",
    "attributes": ["operator"],
    "single_children": ["expression"]
  },

  {
    "comment": "REVISIT ME - COULD THIS BE EASILY MERGED WITH FOR FOR 'ITERATIONSTATEMENT'?",
    "name": "While",
    "attributes": [],
    "single_children": ["conditional"],
    "list_children": ["body_statements"],
  }
]